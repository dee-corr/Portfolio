{"ast":null,"code":"import { ADD_ARTICLE, FOUND_BAD_WORD } from \"../constants/action-types\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nconst initialState = {\n  articles: [],\n  error: errorMessage\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n    return Object.assign({}, state, {\n      articles: state.articles.concat(action.payload)\n    });\n  }\n\n  if (action.type === FOUND_BAD_WORD) {\n    return Object.assign({}, state, {\n      error: state.errror.concat(action.payload)\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:\\Users\\deirdre.corr\\Documents\\Personal\\Practice\\react\\my-app\\src\\reducers\\reducer.js"],"names":["ADD_ARTICLE","FOUND_BAD_WORD","ErrorMessage","initialState","articles","error","errorMessage","rootReducer","state","action","type","Object","assign","concat","payload","errror"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,2BAA5C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAEC;AAFY,CAArB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,WAApB,EAAiC;AAC/B,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeS,MAAf,CAAsBJ,MAAM,CAACK,OAA7B;AADoB,KAAzB,CAAP;AAGD;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgBT,cAApB,EAAoC;AAClC,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BH,MAAAA,KAAK,EAAEG,KAAK,CAACO,MAAN,CAAaF,MAAb,CAAoBJ,MAAM,CAACK,OAA3B;AADuB,KAAzB,CAAP;AAGD;;AACD,SAAON,KAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["import { ADD_ARTICLE, FOUND_BAD_WORD } from \"../constants/action-types\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  error: errorMessage\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_ARTICLE) {\r\n    return Object.assign({}, state, {\r\n      articles: state.articles.concat(action.payload)\r\n    });\r\n  }\r\n  \r\n  if (action.type === FOUND_BAD_WORD) {\r\n    return Object.assign({}, state, {\r\n      error: state.errror.concat(action.payload)\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}