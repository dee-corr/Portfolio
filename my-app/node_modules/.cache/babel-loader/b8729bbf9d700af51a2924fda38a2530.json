{"ast":null,"code":"import * as d3 from 'd3'; //const createLineChart = data => {\n\nvar node = document.createElement('div');\nvar diameter = 960,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\nvar bubble = d3.layout.pack().sort(null).size([diameter, diameter]).padding(1.5);\nvar svg = d3.select(node).append(\"svg\").attr(\"width\", diameter).attr(\"height\", diameter).attr(\"class\", \"bubble\");\nd3.json(\"flare.json\", function (error, root) {\n  if (error) throw error;\n  var bubbles = svg.selectAll(\".node\").data(bubble.nodes(classes(root)).filter(function (d) {\n    return !d.children;\n  })).enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n  });\n}); //}\n\nfunction classes(root) {\n  var classes = [];\n\n  function recurse(name, node) {\n    if (node.children) node.children.forEach(function (child) {\n      recurse(node.name, child);\n    });else classes.push({\n      packageName: name,\n      className: node.name,\n      value: node.size\n    });\n  }\n\n  recurse(null, root);\n  return {\n    children: classes\n  };\n}\n\nexport default createLineChart;","map":{"version":3,"sources":["C:\\Users\\deirdre.corr\\Documents\\Personal\\Practice\\react\\my-app\\src\\d3\\visionEthnicity.js"],"names":["d3","node","document","createElement","diameter","format","color","scale","category20c","bubble","layout","pack","sort","size","padding","svg","select","append","attr","json","error","root","bubbles","selectAll","data","nodes","classes","filter","d","children","enter","x","y","recurse","name","forEach","child","push","packageName","className","value","createLineChart"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB,C,CAEA;;AAEI,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AAEA,IAAIC,QAAQ,GAAG,GAAf;AAAA,IACIC,MAAM,GAAGL,EAAE,CAACK,MAAH,CAAU,IAAV,CADb;AAAA,IAEIC,KAAK,GAAGN,EAAE,CAACO,KAAH,CAASC,WAAT,EAFZ;AAIA,IAAIC,MAAM,GAAGT,EAAE,CAACU,MAAH,CAAUC,IAAV,GACRC,IADQ,CACH,IADG,EAERC,IAFQ,CAEH,CAACT,QAAD,EAAWA,QAAX,CAFG,EAGRU,OAHQ,CAGA,GAHA,CAAb;AAKA,IAAIC,GAAG,GAAGf,EAAE,CAACgB,MAAH,CAAUf,IAAV,EAAgBgB,MAAhB,CAAuB,KAAvB,EACLC,IADK,CACA,OADA,EACSd,QADT,EAELc,IAFK,CAEA,QAFA,EAEUd,QAFV,EAGLc,IAHK,CAGA,OAHA,EAGS,QAHT,CAAV;AAKAlB,EAAE,CAACmB,IAAH,CAAQ,YAAR,EAAsB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;AAC1C,MAAID,KAAJ,EAAW,MAAMA,KAAN;AAEb,MAAIE,OAAO,GAAGP,GAAG,CAACQ,SAAJ,CAAc,OAAd,EACTC,IADS,CACJf,MAAM,CAACgB,KAAP,CAAaC,OAAO,CAACL,IAAD,CAApB,EACLM,MADK,CACE,UAASC,CAAT,EAAY;AAAE,WAAO,CAACA,CAAC,CAACC,QAAV;AAAqB,GADrC,CADI,EAGTC,KAHS,GAGDb,MAHC,CAGM,GAHN,EAITC,IAJS,CAIJ,OAJI,EAIK,MAJL,EAKTA,IALS,CAKJ,WALI,EAKS,UAASU,CAAT,EAAY;AAAE,WAAO,eAAeA,CAAC,CAACG,CAAjB,GAAqB,GAArB,GAA2BH,CAAC,CAACI,CAA7B,GAAiC,GAAxC;AAA8C,GALrE,CAAd;AAOH,CAVG,E,CAWJ;;AAEA,SAASN,OAAT,CAAiBL,IAAjB,EAAuB;AACnB,MAAIK,OAAO,GAAG,EAAd;;AAEA,WAASO,OAAT,CAAiBC,IAAjB,EAAuBjC,IAAvB,EAA6B;AAC3B,QAAIA,IAAI,CAAC4B,QAAT,EAAmB5B,IAAI,CAAC4B,QAAL,CAAcM,OAAd,CAAsB,UAASC,KAAT,EAAgB;AAAEH,MAAAA,OAAO,CAAChC,IAAI,CAACiC,IAAN,EAAYE,KAAZ,CAAP;AAA4B,KAApE,EAAnB,KACKV,OAAO,CAACW,IAAR,CAAa;AAACC,MAAAA,WAAW,EAAEJ,IAAd;AAAoBK,MAAAA,SAAS,EAAEtC,IAAI,CAACiC,IAApC;AAA0CM,MAAAA,KAAK,EAAEvC,IAAI,CAACY;AAAtD,KAAb;AACN;;AAEDoB,EAAAA,OAAO,CAAC,IAAD,EAAOZ,IAAP,CAAP;AACA,SAAO;AAACQ,IAAAA,QAAQ,EAAEH;AAAX,GAAP;AACD;;AAEH,eAAee,eAAf","sourcesContent":["import * as d3 from 'd3';\r\n\r\n//const createLineChart = data => {\r\n\r\n    var node = document.createElement('div');\r\n\r\n    var diameter = 960,\r\n        format = d3.format(\",d\"),\r\n        color = d3.scale.category20c();\r\n    \r\n    var bubble = d3.layout.pack()\r\n        .sort(null)\r\n        .size([diameter, diameter])\r\n        .padding(1.5);\r\n        \r\n    var svg = d3.select(node).append(\"svg\")\r\n        .attr(\"width\", diameter)\r\n        .attr(\"height\", diameter)\r\n        .attr(\"class\", \"bubble\");\r\n    \r\n    d3.json(\"flare.json\", function(error, root) {\r\n      if (error) throw error;\r\n    \r\n    var bubbles = svg.selectAll(\".node\")\r\n        .data(bubble.nodes(classes(root))\r\n        .filter(function(d) { return !d.children; }))\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\r\n    \r\n})\r\n//}\r\n\r\nfunction classes(root) {\r\n    var classes = [];\r\n  \r\n    function recurse(name, node) {\r\n      if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });\r\n      else classes.push({packageName: name, className: node.name, value: node.size});\r\n    }\r\n  \r\n    recurse(null, root);\r\n    return {children: classes};\r\n  }\r\n\r\nexport default createLineChart;"]},"metadata":{},"sourceType":"module"}